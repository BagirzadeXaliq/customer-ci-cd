#name: Simple CI
#
#on:
#  pull_request:
#    branches: [ main ]
#
#jobs:
#  build:
#
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout code
#        uses: actions/checkout@v3
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#
#      - name: Build with Gradle
#        run: ./gradlew build
#
#      - name: Run tests
#        run: ./gradlew test

#name: CI Pipeline
#
#on:
#  push:
#    branches:
#      - main
#
#jobs:
#  build-and-deploy:
#    runs-on: ubuntu-latest
#
#    env:
#      IMAGE_NAME: my-springboot-app
#      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
#      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v3
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v3
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#
#      - name: Build project with Gradle
#        run: ./gradlew clean build -x test
#
#      - name: Log in to DockerHub
#        run: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
#
#      - name: Build Docker image
#        run: docker build -t $DOCKER_USERNAME/$IMAGE_NAME:latest .
#
#      - name: Push Docker image to DockerHub
#        run: docker push $DOCKER_USERNAME/$IMAGE_NAME:latest
#
#      - name: Set up kubectl
#        uses: azure/setup-kubectl@v3
#        with:
#          version: 'latest'
#
#      - name: Set up Kubeconfig
#        run: |
#          mkdir -p ~/.kube
#          echo "${{ secrets.KUBECONFIG_CONTENT }}" > ~/.kube/config
#
#      - name: Deploy to Kubernetes
#        run: |
#          kubectl apply -f deployment.yaml
#          kubectl apply -f service.yaml

#name: Java CI with Gradle
#
#on:
#  push:
#    branches: [ "master" ]
#  pull_request:
#    branches: [ "master" ]
#
#jobs:
#  build:
#
#    runs-on: ubuntu-latest
#
#    steps:
#      - name: Checkout repository
#        uses: actions/checkout@v4
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v4
#        with:
#          distribution: 'temurin'
#          java-version: 17
#
#      - name: Grant execute permission for gradlew
#        run: chmod +x gradlew
#
#      - name: Build with Gradle
#        run: ./gradlew build
#
#      - name: Run Unit Tests
#        run: ./gradlew test
#
#      - name: Run Checkstyle
#        run: ./gradlew checkstyleMain checkstyleTest
#
#      - name: Run OWASP Dependency Check
#        uses: dependency-check/Dependency-Check_Action@main
#        with:
#          project: 'ms-customer-ci-cd'
#          path: '.'
#          format: 'HTML'

name: CI - Build & Push Docker

on:
  push:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Build with Gradle
        run: ./gradlew clean build -x test

      - name: Debug Secrets
        run: |
          if [ -z "${{ secrets.DOCKER_USERNAME }}" ]; then
            echo "::error ::DOCKER_USERNAME secret is EMPTY or NOT READABLE"
          else
            echo "::notice ::DOCKER_USERNAME secret is SET"
          fi


      - name: Build Docker Image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/springboot-app:latest .

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image
        run: docker push ${{ secrets.DOCKER_USERNAME }}/springboot-app:latest